#running in default namespace
#Running a zk ensemble i.e cluster as a stateful set

#for PodDisruption
ajuser:~ $ cp -r kafka/ApacheKafka/Apache_kafka/Wrking/EKS_Work/deployments/zookeeper-ensemble/zookeeper-pod-disruption-budget-minavailable.yaml kafka-inskubernetes/orig-e4/

ajuser:~ $ kubectl apply -f kubernetes/orig-e4/zookeeper-pod-disruption-budget-minavailable.yaml                       
poddisruptionbudget.policy/zk-pdb created

ajuser:~ $ cp -r kafka/ApacheKafka/Apache_kafka/Wrking/EKS_Work/deployments/zookeeper-ensemble/zookeeper.yaml /kubernetes/orig-e4/  

ajuser:~ $ kubectl apply -f kubernetes/orig-e4/zookeeper.yaml                                                          
service/zk-hs created
service/zk-cs created
statefulset.apps/zk created

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          5s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          7s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          9s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          11s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          12s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          14s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          16s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          17s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS    RESTARTS   AGE
zk-0   0/1     Running   0          19s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   1/1     Running             0          41s
zk-1   0/1     ContainerCreating   0          7s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   1/1     Running             0          86s
zk-1   1/1     Running             0          52s
zk-2   0/1     ContainerCreating   0          19s

#connecting to pods to check status of zk processes 
ajuser:~ $ kubectl exec -it zk-0 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.

zookeeper@zk-0:/$ ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var

zookeeper@zk-0:/$ zkCli.sh 

#check status of zk process and if its leader/follower
zookeeper@zk-0:/$ echo stat | nc localhost 2181
Zookeeper version: 3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
Clients:
 /127.0.0.1:41122[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/3/14
Received: 38
Sent: 37
Connections: 1
Outstanding: 0
Zxid: 0x100000002
Mode: follower
Node count: 4
zookeeper@zk-0:/$ exit
exit


#similarly connecting to other pods

ajuser:~ $ kubectl exec -it zk-1 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
zookeeper@zk-1:/$ echo stat | nc localhost 2181
Zookeeper version: 3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
Clients:
 /127.0.0.1:44072[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/0/0
Received: 33
Sent: 32
Connections: 1
Outstanding: 0
Zxid: 0x100000002
Mode: leader
Node count: 4
zookeeper@zk-1:/$ exit
exit


ajuser:~ $ kubectl exec -it zk-2 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
zookeeper@zk-2:/$ echo stat | nc localhost 2181
Zookeeper version: 3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
Clients:
 /127.0.0.1:41946[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/0/0
Received: 33
Sent: 32
Connections: 1
#Running multiple pods ,each having one zk process
Outstanding: 0
Zxid: 0x100000002
Mode: follower
Node count: 4
zookeeper@zk-2:/$ exit
exit

ajuser:~ $ kubectl get pods                                                                                                                
NAME   READY   STATUS    RESTARTS   AGE
zk-0   1/1     Running   0          4m29s
zk-1   1/1     Running   0          3m55s
zk-2   1/1     Running   0          3m22s

ajuser:~ $ kubectl get svc
NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE
kubernetes   ClusterIP   10.100.0.1      <none>        443/TCP             3h29m
zk-cs        ClusterIP   10.100.40.205   <none>        2181/TCP            4m49s
zk-hs        ClusterIP   None            <none>        2888/TCP,3888/TCP   4m49s
