Install kafka cluster using Docker & Docker-compose [confluentinc: kafka,zookeeper image]
Install kafka using Docker & Docker-compose
-------------------
--Allows us to run kafka on any OS
--Avoids requirements of installing new dependencies

#Prerequisites check
$docker --version
Docker version 20.10.2, build 20.10.2-0ubuntu~18.04.02

$docker-compose --version
docker-compose version 1.17.1, build unknown

#Docker allows us to create virtual env inside the host machine
#To install kafka we can create 'kafka containers' & 'zookeeper containers' 
#within this virtual environment
#These containers can then communicate with each other for kafka to be usable.

#These containers can be reached via some ports which are exposed.

--Look for 'docker image of zookeeper created by confluentinc'
  https://hub.docker.com/r/confluentinc/cp-zookeeper

--command to get the image
docker pull confluentinc/cp-zookeeper

--similarly for kafka
docker pull confluentinc/cp-kafka
#But we will pull these images from our docker-compose.yml

#create a directory 'kafka-installation2'
#create a file 'docker-compose.yml' in this directory

--contents of 'docker-compose.yml'

version: '2'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-1
    ports:
      - "12181:12181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888;zookeeper-2:22888:23888;zookeeper-3:32888:33888

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-2
    ports:
      - "22181:22181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888;zookeeper-2:22888:23888;zookeeper-3:32888:33888

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper-3
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:12888:13888;zookeeper-2:22888:23888;zookeeper-3:32888:33888

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:12181,zookeeper-3:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092
 
  kafka-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-2
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:12181,zookeeper-3:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29092
 
  kafka-3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-3
    ports:
      - "39092:39092"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:12181,zookeeper-2:12181,zookeeper-3:12181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:39092
--
#to pull images and start the container
$docker-compose -f docker-compose.yml up

#to run containers in background
$docker-compose -f docker-compose.yml up -d

$docker container ls

$docker-compose ps

#install telnet

$telnet localhost 12181
<ctrl+c>

#to connect to kafka cluster from CLI
$docker exec  -it kafkainstallation2_kafka-1_1 /bin/sh

sh-4.4$ls /
sh-4.4$ls /bin

sh-4.4$kafka-topics --list --bootstrap-server localhost:19092

sh-4.4$kafka-topics --create --topic Test1 --bootstrap-server localhost:19092 --partitions 3 --replication-factor 3

sh-4.4$kafka-topics --list --bootstrap-server localhost:9092

sh-4.4$kafka-topics --describe --bootstrap-server localhost:9092




