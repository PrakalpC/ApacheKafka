hdu@m1:~$ echo dump | nc m1 2181 | grep brokers
	/brokers/ids/3
	/brokers/ids/2
	/brokers/ids/1

hdu@m1:~$ echo dump | nc m1 2181
SessionTracker dump:
org.apache.zookeeper.server.quorum.LearnerSessionTracker@329b0ee
ephemeral nodes dump:
Sessions with Ephemerals (3):
0x27944ab8b320000:
	/brokers/ids/3
0x37944abbed30000:
	/brokers/ids/2
0x17944ab8b040000:
	/controller
	/brokers/ids/1

hdu@m1:~$ kafka-topics.sh --create --topic topic1 --bootstrap-server m1:9092 --partitions 1 --replication-factor 1

hdu@m1:~$ kafka-topics.sh --list --bootstrap-server m1:9092
topic1

hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic1
Topic:topic1	PartitionCount:1	ReplicationFactor:1	Configs:segment.bytes=1073741824
	Topic: topic1	Partition: 0	Leader: 2	Replicas: 2	Isr: 2

hdu@m1:~$ kafka-topics.sh --create --topic topic2 --bootstrap-server m1:9092 --partitions 1 --replication-factor 1

hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic2
Topic:topic2	PartitionCount:1	ReplicationFactor:1	Configs:segment.bytes=1073741824
	Topic: topic2	Partition: 0	Leader: 1	Replicas: 1	Isr: 1

hdu@m1:~$ kafka-topics.sh --list --bootstrap-server m1:9092
topic1
topic2

hdu@m1:~$ kafka-topics.sh --create --topic topic3 --bootstrap-server m1:9092 --partitions 1 --replication-factor 1

hdu@m1:~$ kafka-topics.sh --list --bootstrap-server m1:9092
topic1
topic2
topic3

hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic3
Topic:topic3	PartitionCount:1	ReplicationFactor:1	Configs:segment.bytes=1073741824
	Topic: topic3	Partition: 0	Leader: 1	Replicas: 1	Isr: 1

hdu@m1:~$ kafka-topics.sh --create --topic topic4 --bootstrap-server m1:9092 --partitions 1 --replication-factor 3

hdu@m1:~$ kafka-topics.sh --list --bootstrap-server m1:9092
topic1
topic2
topic3
topic4

hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic4
Topic:topic4	PartitionCount:1	ReplicationFactor:3	Configs:segment.bytes=1073741824
	Topic: topic4	Partition: 0	Leader: 2	Replicas: 2,3,1	Isr: 2,3,1

hdu@m3:~$ ls /tmp/kafka-logs/
cleaner-offset-checkpoint  log-start-offset-checkpoint  meta.properties  recovery-point-offset-checkpoint  replication-offset-checkpoint  topic4-0
hdu@m3:~$ logout
Connection to m3 closed.

hdu@m2:~$ ls /tmp/kafka-logs/
cleaner-offset-checkpoint  log-start-offset-checkpoint  meta.properties  recovery-point-offset-checkpoint  replication-offset-checkpoint  topic1-0  topic4-0
hdu@m2:~$ logout
Connection to m2 closed.

hdu@m1:~$ ls /tmp/kafka-logs/
cleaner-offset-checkpoint  log-start-offset-checkpoint  meta.properties  recovery-point-offset-checkpoint  replication-offset-checkpoint  topic2-0  topic3-0  topic4-0

#testing replication
hdu@m1:~$ kafka-topics.sh --create --topic topic5 --bootstrap-server m1:9092 --partitions 1 --replication-factor 2
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 2	Replicas: 2,3	Isr: 2,3

hdu@m1:~$ #kill broker-2
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3

#start broker-2
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic5
Topic:topic5	PartitionCount:1	ReplicationFactor:2	Configs:segment.bytes=1073741824
	Topic: topic5	Partition: 0	Leader: 3	Replicas: 2,3	Isr: 3,2

#producing & consuming data, then checking offsets
hdu@m1:~$ kafka-topics.sh --bootstrap-server m1:9092 --describe --topic topic4
Topic:topic4	PartitionCount:1	ReplicationFactor:3	Configs:segment.bytes=1073741824
	Topic: topic4	Partition: 0	Leader: 2	Replicas: 2,3,1	Isr: 3,1,2

hdu@m1:~$ kafka-console-producer.sh --topic topic4 --broker-list m1:9092,m2:9092,m3:9092
>chicago 
>newyork
>dallas
>texas
>chicago
>dallas

>^Chdu@m1:~$ ls /tmp/kafka-logs/
cleaner-offset-checkpoint  log-start-offset-checkpoint  meta.properties  recovery-point-offset-checkpoint  replication-offset-checkpoint  topic2-0  topic3-0  topic4-0

hdu@m1:~$ ls /tmp/kafka-logs/topic4-0/
00000000000000000000.index  00000000000000000000.log  00000000000000000000.timeindex  leader-epoch-checkpoint

hdu@m1:~$ vi /tmp/kafka-logs/topic4-0/00000000000000000000.log 

--use the GetOffsetShell class to check the beginning and ending offset of a topic's partition.
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 
topic4:0:6

--to check the end offset set the time parameter to -1
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -1
topic4:0:6

--to check the start offset set the time parameter to -2
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -2
topic4:0:0

#deleting records(some/all) from a topic
--if wrong data was produced
--if there was a bug in producer code
--check if 'delete.topic.enable=true', default from kafka 1.0.0

--to delete we need a JSON file describing which records to be deleted and information of your bootstrap server
vi delete-records.json
{
  "partitions":[
   {
    "topic":"topic4",
    "partition":0,
    "offset": 2
   }
   ],
   "version":1
}

For example:
--after creating a json file
hdu@m1:~$ kafka-delete-records.sh --bootstrap-server m1:9092 --offset-json-file delete-records.json 
Executing records delete operation
Records delete operation completed:
partition: topic4-0	low_watermark: 2

hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4
topic4:0:6

hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -2
topic4:0:2

hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -1
topic4:0:6

hdu@m1:~$ kafka-console-consumer.sh --topic topic4 --bootstrap-server m1:9092 --from-beginning
dallas
texas
chicago
dallas
--Note* 1st two records i.e. upto offset 2 are deleted

#deleting all records/prune all messages based on retention period by reducing retention period to a smaller time
--this does not work for compacted topics
--here we have to wait for broker to remove all the records from topic and then set topic retention to original value

--set retention.ms to 100 milliseconds
kafka-configs --zookeeper m1:2181 --entity-type topics --entity-name topic4 --alter --add-config retention.ms=100

--wait for brokers to clean up and then check start and end offset

--set retention.ms to its original value

for example:
hdu@m1:~$ kafka-configs.sh --zookeeper m1:2181 --entity-type topics --entity-name topic4 --alter --add-config retention.ms=100
Completed Updating config for entity: topic 'topic4'.
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4
topic4:0:6
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4
topic4:0:6
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -1
topic4:0:6
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -2
topic4:0:2
hdu@m1:~$ kafka-console-consumer.sh --topic topic4 --bootstrap-server m1:9092 --from-beginning
dallas
texas
chicago
dallas
^CProcessed a total of 4 messages
hdu@m1:~$ kafka-console-consumer.sh --topic topic4 --bootstrap-server m1:9092 --from-beginning
^CProcessed a total of 0 messages
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -2
topic4:0:6
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4 --time -1
topic4:0:6
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic4
topic4:0:6

hdu@m1:~$ kafka-configs.sh --zookeeper m1:2181 --entity-type topics --entity-name topic4 --alter --add-config retention.ms=<ORIGINAL VALUE>
or
hdu@m1:~$ kafka-configs.sh --zookeeper m1:2181 --entity-type topics --entity-name topic4 --alter --delete-config retention.ms
Completed Updating config for entity: topic 'topic4'.

#working with a topic that has multiple partitions
hdu@m1:~$ kafka-topics.sh --create --topic topic6 --bootstrap-server m1:9092 --partitions 3 --replication-factor 3

hdu@m1:~$ #producing data to any partition 
hdu@m1:~$ kafka-console-producer.sh --topic topic6 --broker-list m1:9092,m2:9092,m3:9092
>america
>india
>australia
>germany
>canada
>dubai

hdu@m1:~$ kafka-topics.sh --topic topic6 --bootstrap-server m1:9092 --describe
Topic:topic6	PartitionCount:3	ReplicationFactor:3	Configs:segment.bytes=1073741824
	Topic: topic6	Partition: 0	Leader: 1	Replicas: 1,3,2	Isr: 1,3,2
	Topic: topic6	Partition: 1	Leader: 2	Replicas: 2,1,3	Isr: 2,1,3
	Topic: topic6	Partition: 2	Leader: 3	Replicas: 3,2,1	Isr: 3,2,1

hdu@m1:~$ kafka-console-consumer.sh --topic topic6 --bootstrap-server m1:9092 --partition 0 --from-beginning
australia
dubai
^CProcessed a total of 2 messages
hdu@m1:~$ kafka-console-consumer.sh --topic topic6 --bootstrap-server m1:9092 --partition 1 --from-beginning
india
canada
^CProcessed a total of 2 messages
hdu@m1:~$ kafka-console-consumer.sh --topic topic6 --bootstrap-server m1:9092 --partition 2 --from-beginning
america
germany
^CProcessed a total of 2 messages

hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic6 --partitions 0
topic6:0:2
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic6 --partitions 1
topic6:1:2
hdu@m1:~$ kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list m1:9092 --topic topic6 --partitions 2
topic6:2:2

#sending data to specific partition
--in addition to existing data in topic and its partitions, now we can send data with similar keys to same partition

hdu@m1:~$ kafka-console-producer.sh --topic topic6 --broker-list m1:9092,m2:9092,m3:9092 --property "parse.key=true" --property "key.separator=:"
>asia:india
>asia:bangladesh
>asia:singapore
>north-america:usa
>north-america:canada
>europe:germany
>europe:france
>europe:italy

hdu@m1:kafka-console-consumer.sh --topic topic6 --bootstrap-server m1:9092 --partition 0 --from-beginning
australia
dubai
Processed a total of 2 messages

hdu@m1:~$ kafka-console-consumer.sh --topic topic6 --bootstrap-server m1:9092 --partition 1 --from-beginning
india
canada
usa
canada
Processed a total of 4 messages

hdu@m1:~$ kafka-console-consumer.sh --topic topic6 --bootstrap-server m1:9092 --partition 2 --from-beginning
america
germany
india
bangladesh
singapore
germany
france
italy
Processed a total of 8 messages


#looking into consumer groups
kafka-consumer-groups.sh --bootstrap-server m1:9092 --list

#creating consumer group while reading using a consumer
hdu@m1:~$ kafka-consumer-groups.sh --bootstrap-server m1:9092 --list
my-group

hdu@m1:~$ kafka-console-consumer.sh --bootstrap-server m1:9092 --topic topic6 --from-beginning
australia
dubai
america
germany
india
bangladesh
singapore
germany
france
italy
india
canada
usa
canada
^CProcessed a total of 14 messages

hdu@m1:~$ kafka-consumer-groups.sh --bootstrap-server m1:9092 --list
console-consumer-56780
my-group

hdu@m1:~$ kafka-console-consumer.sh --bootstrap-server m1:9092 --topic topic6 --from-beginning --group countries
australia
dubai
america
germany
india
bangladesh
singapore
germany
france
italy
india
canada
usa
canada
^CProcessed a total of 14 messages

hdu@m1:~$ kafka-consumer-groups.sh --bootstrap-server m1:9092 --list
console-consumer-56780
my-group
countries

