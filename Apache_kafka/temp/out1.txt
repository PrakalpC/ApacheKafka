#deploying a pod for zookeeper using 'zookeeper.yml' file

ajuser:~ $ kubectl apply -f kafka-installation5/kubernetes/zookeeper.yml 
statefulset.apps/zoo configured

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS              RESTARTS   AGE
zoo-0   0/1     ContainerCreating   0          7s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS              RESTARTS   AGE
zoo-0   0/1     ContainerCreating   0          11s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS              RESTARTS   AGE
zoo-0   0/1     ContainerCreating   0          13s
ajuser:~ $ kubectl get pods --namespace kafka

NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          16s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          19s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          21s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          23s

#connecting to pod throws error msg as we need to point to namespace
ajuser:~ $ kubectl exec -it zoo-0 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
Error from server (NotFound): pods "zoo-0" not found

#connecting again and getting into pod>container
ajuser:~ $ kubectl exec -it zoo-0 /bin/bash --namespace kafka
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.

root@zoo-0:/opt/zookeeper-3.4.13# ls
LICENSE.txt  README_packaging.txt  conf     dist-maven  ivysettings.xml  src                       zookeeper-3.4.13.jar.md5
NOTICE.txt   bin                   contrib  docs        lib              zookeeper-3.4.13.jar      zookeeper-3.4.13.jar.sha1
README.md    build.xml             data     ivy.xml     recipes          zookeeper-3.4.13.jar.asc

root@zoo-0:/opt/zookeeper-3.4.13# zkCli.sh 
bash: zkCli.sh: command not found

root@zoo-0:/opt/zookeeper-3.4.13# bin/zkCli.sh 
command terminated with exit code 137

#commands exits with 137 which shows memory issue and might be container is terminated, let's check

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   2          2m16s

NAME    READY   STATUS    RESTARTS   AGE
zoo-0   1/1     Running   2          3m9s

#doing a describe on pod
ajuser:~ $ kubectl describe pod zoo-0 --namespace kafka
Name:         zoo-0
Namespace:    kafka
Priority:     0
Node:         ip-192-168-24-50.eu-central-1.compute.internal/192.168.24.50
Start Time:   Sun, 22 Aug 2021 17:34:46 +0000
Labels:       app=zookeeper
              controller-revision-hash=zoo-58b6c66ccf
              statefulset.kubernetes.io/pod-name=zoo-0
              storage=persistent-regional
Annotations:  kubernetes.io/psp: eks.privileged
Status:       Running
IP:           192.168.23.16
IPs:
  IP:           192.168.23.16
Controlled By:  StatefulSet/zoo
Containers:
  zookeeper:
    Container ID:   docker://ddf663d330192187ae542b4e76fb24af6a5cc9c99480dce102fe6f6dc18f3315
    Image:          wurstmeister/zookeeper
    Image ID:       docker-pullable://wurstmeister/zookeeper@sha256:7a7fd44a72104bfbd24a77844bad5fabc86485b036f988ea927d1780782a6680
    Ports:          2181/TCP, 2888/TCP, 3888/TCP
    Host Ports:     0/TCP, 0/TCP, 0/TCP
    State:          Running
      Started:      Sun, 22 Aug 2021 17:38:53 +0000
    Last State:     Terminated
      Reason:       OOMKilled
      Exit Code:    137
      Started:      Sun, 22 Aug 2021 17:36:54 +0000
      Finished:     Sun, 22 Aug 2021 17:38:29 +0000
    Ready:          True
    Restart Count:  3
    Limits:
      memory:  120Mi
    Requests:
      cpu:      10m
      memory:   100Mi
    Readiness:  exec [/bin/sh -c [ "imok" = "$(echo ruok | nc -w 1 -q 1 127.0.0.1 2181)" ]] delay=0s timeout=2s period=30s #success=1 #failure=3
    Environment:
      POD_NAME:          zoo-0 (v1:metadata.name)
      KAFKA_LOG4J_OPTS:  -Dlog4j.configuration=file:/etc/kafka/log4j.properties
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-mq7sd (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  default-token-mq7sd:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-mq7sd
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                  From               Message
  ----     ------     ----                 ----               -------
  Normal   Scheduled  5m24s                default-scheduler  Successfully assigned kafka/zoo-0 to ip-192-168-24-50.eu-central-1.compute.internal
  Normal   Pulling    5m23s                kubelet            Pulling image "wurstmeister/zookeeper"
  Normal   Pulled     5m11s                kubelet            Successfully pulled image "wurstmeister/zookeeper" in 12.110547959s
  Warning  BackOff    88s (x3 over 3m30s)  kubelet            Back-off restarting failed container
  Normal   Created    77s (x4 over 5m11s)  kubelet            Created container zookeeper
  Normal   Started    77s (x4 over 5m11s)  kubelet            Started container zookeeper
  Normal   Pulled     77s (x3 over 4m6s)   kubelet            Container image "wurstmeister/zookeeper" already present on machine

#Delete the pod
#Edit the zookeeper.yml 
#Deploy the pod again..

ajuser:~ $ kubectl delete -f kafka-installation5/kubernetes/zookeeper.yml                                                                  
statefulset.apps "zoo" deleted

ajuser:~ $ vi kafka-installation5/kubernetes/zookeeper.yml                                                                                 

ajuser:~ $ kubectl apply -f kafka-installation5/kubernetes/zookeeper.yml                                                                   
statefulset.apps/zoo created

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          13s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          15s

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   0/1     Running   0          17s

ajuser:~ $ kubectl top pod zoo-0 --namespace kafka                                                                                         
error: Metrics API not available

ajuser:~ $ kubectl get pods --namespace kafka
NAME    READY   STATUS    RESTARTS   AGE
zoo-0   1/1     Running   0          54s

ajuser:~ $ kubectl exec -it zoo-0 /bin/bash --namespace kafka                                                                              
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.

root@zoo-0:/opt/zookeeper-3.4.13# bin/zkCli.sh
Connecting to localhost:2181
2021-08-22 17:49:59,665 [myid:] - INFO  [main:Environment@100] - Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 04:05 GMT
2021-08-22 17:49:59,670 [myid:] - INFO  [main:Environment@100] - Client environment:host.name=zoo-0.zoo.kafka.svc.cluster.local
2021-08-22 17:49:59,670 [myid:] - INFO  [main:Environment@100] - Client environment:java.version=1.7.0_65
2021-08-22 17:49:59,673 [myid:] - INFO  [main:Environment@100] - Client environment:java.vendor=Oracle Corporation
2021-08-22 17:49:59,673 [myid:] - INFO  [main:Environment@100] - Client environment:java.home=/usr/lib/jvm/java-7-openjdk-amd64/jre
2021-08-22 17:49:59,673 [myid:] - INFO  [main:Environment@100] - Client environment:java.class.path=/opt/zookeeper-3.4.13/bin/../build/classes:/opt/zookeeper-3.4.13/bin/../build/lib/*.jar:/opt/zookeeper-3.4.13/bin/../lib/slf4j-log4j12-1.7.25.jar:/opt/zookeeper-3.4.13/bin/../lib/slf4j-api-1.7.25.jar:/opt/zookeeper-3.4.13/bin/../lib/netty-3.10.6.Final.jar:/opt/zookeeper-3.4.13/bin/../lib/log4j-1.2.17.jar:/opt/zookeeper-3.4.13/bin/../lib/jline-0.9.94.jar:/opt/zookeeper-3.4.13/bin/../lib/audience-annotations-0.5.0.jar:/opt/zookeeper-3.4.13/bin/../zookeeper-3.4.13.jar:/opt/zookeeper-3.4.13/bin/../src/java/lib/*.jar:/opt/zookeeper-3.4.13/bin/../conf:
2021-08-22 17:49:59,673 [myid:] - INFO  [main:Environment@100] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-08-22 17:49:59,674 [myid:] - INFO  [main:Environment@100] - Client environment:java.io.tmpdir=/tmp
2021-08-22 17:49:59,674 [myid:] - INFO  [main:Environment@100] - Client environment:java.compiler=<NA>
2021-08-22 17:49:59,674 [myid:] - INFO  [main:Environment@100] - Client environment:os.name=Linux
2021-08-22 17:49:59,674 [myid:] - INFO  [main:Environment@100] - Client environment:os.arch=amd64
2021-08-22 17:49:59,674 [myid:] - INFO  [main:Environment@100] - Client environment:os.version=5.4.129-63.229.amzn2.x86_64
2021-08-22 17:49:59,675 [myid:] - INFO  [main:Environment@100] - Client environment:user.name=root
2021-08-22 17:49:59,675 [myid:] - INFO  [main:Environment@100] - Client environment:user.home=/root
2021-08-22 17:49:59,675 [myid:] - INFO  [main:Environment@100] - Client environment:user.dir=/opt/zookeeper-3.4.13
2021-08-22 17:49:59,677 [myid:] - INFO  [main:ZooKeeper@442] - Initiating client connection, connectString=localhost:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@674e5e21
Welcome to ZooKeeper!
2021-08-22 17:49:59,704 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1029] - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
JLine support is enabled
2021-08-22 17:49:59,732 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@879] - Socket connection established to localhost/127.0.0.1:2181, initiating session
[zk: localhost:2181(CONNECTING) 0] 2021-08-22 17:49:59,771 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1303] - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100005cf8050000, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null
ls /
[zookeeper]
[zk: localhost:2181(CONNECTED) 1] ls /
[zookeeper]
[zk: localhost:2181(CONNECTED) 2] ls /zookeeper
[quota]
[zk: localhost:2181(CONNECTED) 3] quit
Quitting...
2021-08-22 17:50:24,336 [myid:] - INFO  [main-EventThread:ClientCnxn$EventThread@522] - EventThread shut down for session: 0x100005cf8050000
2021-08-22 17:50:24,337 [myid:] - INFO  [main:ZooKeeper@693] - Session: 0x100005cf8050000 closed

root@zoo-0:/opt/zookeeper-3.4.13# echo stat | nc localhost 2181                                                                            
Zookeeper version: 3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 04:05 GMT
Clients:
 /127.0.0.1:56184[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/3/14
Received: 12
Sent: 11
Connections: 1
Outstanding: 0
Zxid: 0x2
Mode: standalone
Node count: 4
root@zoo-0:/opt/zookeeper-3.4.13# exit

###
ajuser:~ $ kubectl describe pod zoo-0 --namespace kafka
Name:         zoo-0
Namespace:    kafka
Priority:     0
Node:         ip-192-168-24-50.eu-central-1.compute.internal/192.168.24.50
Start Time:   Sun, 22 Aug 2021 17:48:23 +0000
Labels:       app=zookeeper
              controller-revision-hash=zoo-6c497fb7b7
              statefulset.kubernetes.io/pod-name=zoo-0
              storage=persistent-regional
Annotations:  kubernetes.io/psp: eks.privileged
Status:       Running
IP:           192.168.25.91
IPs:
  IP:           192.168.25.91
Controlled By:  StatefulSet/zoo
Containers:
  zookeeper:
    Container ID:   docker://7281ddb0fe46e492d4d7c80da3b6b8c227207f4fdab14e193626d44b0ca10f81
    Image:          wurstmeister/zookeeper
    Image ID:       docker-pullable://wurstmeister/zookeeper@sha256:7a7fd44a72104bfbd24a77844bad5fabc86485b036f988ea927d1780782a6680
    Ports:          2181/TCP, 2888/TCP, 3888/TCP
    Host Ports:     0/TCP, 0/TCP, 0/TCP
    State:          Running
      Started:      Sun, 22 Aug 2021 17:48:25 +0000
    Ready:          True
    Restart Count:  0
    Limits:
      memory:  1200Mi
    Requests:
      cpu:      500m
      memory:   500Mi
    Readiness:  exec [/bin/sh -c [ "imok" = "$(echo ruok | nc -w 1 -q 1 127.0.0.1 2181)" ]] delay=0s timeout=2s period=30s #success=1 #failure=3
    Environment:
      POD_NAME:          zoo-0 (v1:metadata.name)
      KAFKA_LOG4J_OPTS:  -Dlog4j.configuration=file:/etc/kafka/log4j.properties
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-mq7sd (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  default-token-mq7sd:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-mq7sd
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  3m25s  default-scheduler  Successfully assigned kafka/zoo-0 to ip-192-168-24-50.eu-central-1.compute.internal
  Normal  Pulling    3m24s  kubelet            Pulling image "wurstmeister/zookeeper"
  Normal  Pulled     3m23s  kubelet            Successfully pulled image "wurstmeister/zookeeper" in 1.156018304s
  Normal  Created    3m23s  kubelet            Created container zookeeper
  Normal  Started    3m23s  kubelet            Started container zookeeper


