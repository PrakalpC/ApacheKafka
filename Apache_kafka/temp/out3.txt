#Running a zk ensemble i.e cluster as a stateful set

#for PodDisruption
ajuser:~ $ cp -r kafka/ApacheKafka/Apache_kafka/Wrking/EKS_Work/zookeeper-ensemble/zookeeper-pod-disruption-budget-minavailable.yaml kafka-installation5/kubernetes/orig-e4/

ajuser:~ $ kubectl apply -f kafka-installation5/kubernetes/orig-e4/zookeeper-pod-disruption-budget-minavailable.yaml                       
poddisruptionbudget.policy/zk-pdb created

ajuser:~ $ cp -r kafka/ApacheKafka/Apache_kafka/Wrking/EKS_Work/zookeeper-ensemble/zookeeper.yaml kafka-installation5/kubernetes/orig-e4/  

ajuser:~ $ kubectl apply -f kafka-installation5/kubernetes/orig-e4/zookeeper.yaml                                                          
service/zk-hs created
service/zk-cs created
statefulset.apps/zk created

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          5s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          7s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          9s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          11s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          12s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          14s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          16s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   0/1     ContainerCreating   0          17s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS    RESTARTS   AGE
zk-0   0/1     Running   0          19s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   1/1     Running             0          41s
zk-1   0/1     ContainerCreating   0          7s

ajuser:~ $ kubectl get pods
NAME   READY   STATUS              RESTARTS   AGE
zk-0   1/1     Running             0          86s
zk-1   1/1     Running             0          52s
zk-2   0/1     ContainerCreating   0          19s

#connecting to pods to check status of zk processes 
ajuser:~ $ kubectl exec -it zk-0 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.

zookeeper@zk-0:/$ ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var

zookeeper@zk-0:/$ zkCli.sh 
Connecting to localhost:2181
2021-08-22 19:25:30,597 [myid:] - INFO  [main:Environment@100] - Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
2021-08-22 19:25:30,604 [myid:] - INFO  [main:Environment@100] - Client environment:host.name=zk-0.zk-hs.default.svc.cluster.local
2021-08-22 19:25:30,604 [myid:] - INFO  [main:Environment@100] - Client environment:java.version=1.8.0_131
2021-08-22 19:25:30,609 [myid:] - INFO  [main:Environment@100] - Client environment:java.vendor=Oracle Corporation
2021-08-22 19:25:30,609 [myid:] - INFO  [main:Environment@100] - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2021-08-22 19:25:30,610 [myid:] - INFO  [main:Environment@100] - Client environment:java.class.path=/usr/bin/../build/classes:/usr/bin/../build/lib/*.jar:/usr/bin/../share/zookeeper/zookeeper-3.4.10.jar:/usr/bin/../share/zookeeper/slf4j-log4j12-1.6.1.jar:/usr/bin/../share/zookeeper/slf4j-api-1.6.1.jar:/usr/bin/../share/zookeeper/netty-3.10.5.Final.jar:/usr/bin/../share/zookeeper/log4j-1.2.16.jar:/usr/bin/../share/zookeeper/jline-0.9.94.jar:/usr/bin/../src/java/lib/*.jar:/usr/bin/../etc/zookeeper:
2021-08-22 19:25:30,610 [myid:] - INFO  [main:Environment@100] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2021-08-22 19:25:30,611 [myid:] - INFO  [main:Environment@100] - Client environment:java.io.tmpdir=/tmp
2021-08-22 19:25:30,611 [myid:] - INFO  [main:Environment@100] - Client environment:java.compiler=<NA>
2021-08-22 19:25:30,611 [myid:] - INFO  [main:Environment@100] - Client environment:os.name=Linux
2021-08-22 19:25:30,611 [myid:] - INFO  [main:Environment@100] - Client environment:os.arch=amd64
2021-08-22 19:25:30,611 [myid:] - INFO  [main:Environment@100] - Client environment:os.version=5.4.129-63.229.amzn2.x86_64
2021-08-22 19:25:30,612 [myid:] - INFO  [main:Environment@100] - Client environment:user.name=zookeeper
2021-08-22 19:25:30,612 [myid:] - INFO  [main:Environment@100] - Client environment:user.home=/home/zookeeper
2021-08-22 19:25:30,612 [myid:] - INFO  [main:Environment@100] - Client environment:user.dir=/
2021-08-22 19:25:30,613 [myid:] - INFO  [main:ZooKeeper@438] - Initiating client connection, connectString=localhost:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@22d8cfe0
Welcome to ZooKeeper!
2021-08-22 19:25:30,632 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1032] - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
JLine support is enabled
2021-08-22 19:25:30,737 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@876] - Socket connection established to localhost/127.0.0.1:2181, initiating session
2021-08-22 19:25:30,767 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1299] - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x17b6f520f970000, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null
[zk: localhost:2181(CONNECTED) 0] ls
[zk: localhost:2181(CONNECTED) 1] ls /
[zookeeper]
[zk: localhost:2181(CONNECTED) 3] ls /zookeeper
[quota]

[zk: localhost:2181(CONNECTED) 7] quit
Quitting...
2021-08-22 19:26:09,293 [myid:] - INFO  [main:ZooKeeper@684] - Session: 0x17b6f520f970000 closed
2021-08-22 19:26:09,295 [myid:] - INFO  [main-EventThread:ClientCnxn$EventThread@519] - EventThread shut down for session: 0x17b6f520f970000

#check status of zk process and if its leader/follower
zookeeper@zk-0:/$ echo stat | nc localhost 2181
Zookeeper version: 3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
Clients:
 /127.0.0.1:41122[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/3/14
Received: 38
Sent: 37
Connections: 1
Outstanding: 0
Zxid: 0x100000002
Mode: follower
Node count: 4
zookeeper@zk-0:/$ exit
exit


#similarly connecting to other pods

ajuser:~ $ kubectl exec -it zk-1 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
zookeeper@zk-1:/$ echo stat | nc localhost 2181
Zookeeper version: 3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
Clients:
 /127.0.0.1:44072[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/0/0
Received: 33
Sent: 32
Connections: 1
Outstanding: 0
Zxid: 0x100000002
Mode: leader
Node count: 4
zookeeper@zk-1:/$ exit
exit


ajuser:~ $ kubectl exec -it zk-2 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
zookeeper@zk-2:/$ echo stat | nc localhost 2181
Zookeeper version: 3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
Clients:
 /127.0.0.1:41946[0](queued=0,recved=1,sent=0)

Latency min/avg/max: 0/0/0
Received: 33
Sent: 32
Connections: 1
#Running multiple pods ,each having one zk process
Outstanding: 0
Zxid: 0x100000002
Mode: follower
Node count: 4
zookeeper@zk-2:/$ exit
exit

ajuser:~ $ kubectl get pods                                                                                                                
NAME   READY   STATUS    RESTARTS   AGE
zk-0   1/1     Running   0          4m29s
zk-1   1/1     Running   0          3m55s
zk-2   1/1     Running   0          3m22s

ajuser:~ $ kubectl get svc
NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE
kubernetes   ClusterIP   10.100.0.1      <none>        443/TCP             3h29m
zk-cs        ClusterIP   10.100.40.205   <none>        2181/TCP            4m49s
zk-hs        ClusterIP   None            <none>        2888/TCP,3888/TCP   4m49s
